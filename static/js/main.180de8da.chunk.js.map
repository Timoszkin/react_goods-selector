{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","clear","document","querySelectorAll","forEach","el","classList","remove","setState","message","length","slice","join","concat","this","good","getElementById","add","className","type","value","onClick","map","id","indexOf","prev","result","filter","React","Component","ReactDOM","render"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA0GaC,E,4MAlGbC,MAAQ,CACNC,cAAe,CAAC,Q,EASlBC,MAAQ,WACQC,SAASC,iBAAiB,SAElCC,SAAQ,SAAAC,GACZA,EAAGC,UAAUC,OAAO,aAGtB,EAAKC,SAAS,CAAER,cAAe,CAAC,wB,EAGlCS,QAAU,WACR,OAAI,EAAKV,MAAMC,cAAcU,OAAS,EAC7B,oBAGL,EAAKX,MAAMC,cAAcU,OAAS,EAC7B,EAAKX,MAAMC,cAGb,EAAKD,MAAMC,cAAcW,MAAM,GAAI,GAAGC,KAAK,MAAMC,OAAO,SAASA,SAAW,EAAKd,MAAMC,cAAcW,OAAO,I,uDAzBrH,WACEG,KAAKf,MAAMC,cAAcI,SAAQ,SAAAW,GAAS,IAAD,EACvC,UAAAb,SAASc,eAAT,UAA2BD,WAA3B,SAAoCT,UAAUW,IAAI,e,oBA0BtD,WAAU,IAAD,OACP,OACE,sBAAKC,UAAU,MAAf,UACE,uDAEGJ,KAAKL,aAEPK,KAAKf,MAAMC,cAAcU,OAAS,EAE/B,wBACEQ,UAAU,uBACVC,KAAK,SACLC,MAAM,SACNC,QAASP,KAAKb,MAJhB,uBASC,IACL,oBAAIiB,UAAU,OAAd,SACGrB,EAAgByB,KAAI,SAAAP,GACnB,OACE,mCACE,qBACEQ,GAAIR,EACJG,UAAU,OAFZ,UAIGH,EACD,wBACEG,UAAU,yBACVC,KAAK,SACLC,MAAM,SACNC,QACE,EAAKtB,MAAMC,cAAcwB,QAAzB,UAAoCT,IAAU,EAC1C,WACA,EAAKP,UAAS,SAACiB,GAAU,IAAD,EAClBC,EAAM,sBAAOD,EAAKzB,eAAZ,CAA2Be,IAKrC,OAHAW,EAASA,EAAOC,QAAO,SAAAtB,GAAE,MAAW,sBAAPA,KAC7B,UAAAH,SAASc,eAAT,UAA2BD,WAA3B,SAAoCT,UAAUW,IAAI,UAE3C,CAAEjB,cAAe0B,OAG1B,WAAO,IAAD,EACN,EAAKlB,UAAS,SAACiB,GAGb,MAAO,CAAEzB,cAFMyB,EAAKzB,cAAc2B,QAAO,SAAAtB,GAAE,OAAIA,IAAOU,SAIxD,UAAAb,SAASc,eAAT,UAA2BD,WAA3B,SAAoCT,UAAUC,OAAO,WAtB7D,SA0BG,EAAKR,MAAMC,cAAcwB,QAAzB,UAAoCT,IAAU,EAAI,SAAW,4B,GAvFhEa,IAAMC,WCjBxBC,IAASC,OACP,cAAC,EAAD,IACA7B,SAASc,eAAe,W","file":"static/js/main.180de8da.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  selectedGoods: string[],\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  componentDidMount() {\n    this.state.selectedGoods.forEach(good => {\n      document.getElementById(`${good}`)?.classList.add('active');\n    });\n  }\n\n  clear = () => {\n    const items = document.querySelectorAll('.item');\n\n    items.forEach(el => {\n      el.classList.remove('active');\n    });\n\n    this.setState({ selectedGoods: ['No goods selected'] });\n  };\n\n  message = () => {\n    if (this.state.selectedGoods.length < 1) {\n      return 'No goods selected';\n    }\n\n    if (this.state.selectedGoods.length < 2) {\n      return this.state.selectedGoods;\n    }\n\n    return this.state.selectedGoods.slice(0, -1).join(', ').concat(' and ').concat() + this.state.selectedGoods.slice(-1);\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>\n          Selected goods: -&nbsp;\n          {this.message()}\n        </h1>\n        {this.state.selectedGoods.length > 1\n          ? (\n            <button\n              className=\"button button--reset\"\n              type=\"button\"\n              value=\"button\"\n              onClick={this.clear}\n            >\n              Clear All\n            </button>\n          )\n          : (' ')}\n        <ul className=\"list\">\n          {goodsFromServer.map(good => {\n            return (\n              <>\n                <li\n                  id={good}\n                  className=\"item\"\n                >\n                  {good}\n                  <button\n                    className=\"button button--toggler\"\n                    type=\"button\"\n                    value=\"button\"\n                    onClick={\n                      this.state.selectedGoods.indexOf(`${good}`) < 0\n                        ? () => {\n                          this.setState((prev) => {\n                            let result = [...prev.selectedGoods, good];\n\n                            result = result.filter(el => el !== 'No goods selected');\n                            document.getElementById(`${good}`)?.classList.add('active');\n\n                            return { selectedGoods: result };\n                          });\n                        }\n                        : () => {\n                          this.setState((prev) => {\n                            const result = prev.selectedGoods.filter(el => el !== good);\n\n                            return { selectedGoods: result };\n                          });\n                          document.getElementById(`${good}`)?.classList.remove('active');\n                        }\n                    }\n                  >\n                    {this.state.selectedGoods.indexOf(`${good}`) < 0 ? 'Select' : 'Remove'}\n                  </button>\n                </li>\n              </>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}